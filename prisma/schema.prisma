generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model SocialMediaPost {
  id                String      @id @default(cuid())
  socialMedia       SocialMedia
  failedReason      String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  postId            String
  socialMediaPostId String?
  post              Post        @relation(fields: [postId], references: [id])
}

model Post {
  id               String            @id @default(cuid())
  description      String
  postType         PostType
  images           String[]          @default([])
  video            String?
  scheduledAt      DateTime?
  createdAt        DateTime          @default(now())
  updatedAt        DateTime          @updatedAt
  createdById      String
  createdBy        User              @relation(fields: [createdById], references: [id])
  socialMediaPosts SocialMediaPost[]
}

model User {
  id                   String    @id @default(cuid())
  name                 String?
  email                String    @unique
  emailVerified        DateTime?
  password             String?
  createdAt            DateTime  @default(now())
  updatedAt            DateTime  @updatedAt
  avatarUrl            String?
  oauth2PinterestCode  String?
  oauth2TumblrCode     String?
  posts                Post[]
  brandId              String?
  brand                Brand?    @relation(fields: [brandId], references: [id])
  createdBrands        Brand[]   @relation("BrandCreator")
  createdIntegrations  SocialMediaIntegration[] @relation("SocialMediaIntegrationCreator")
}

model SocialMediaIntegration {
  id          String      @id @default(cuid())
  socialMedia SocialMedia
  code        String
  brandId     String
  brand       Brand       @relation(fields: [brandId], references: [id])
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  createdById String
  createdBy   User        @relation("SocialMediaIntegrationCreator", fields: [createdById], references: [id])
}

model Brand {
  id                    String                  @id @default(cuid())
  name                  String
  socialMediaIntegrations SocialMediaIntegration[]
  users                 User[]
  createdAt             DateTime                @default(now())
  updatedAt             DateTime                @updatedAt
  createdById           String
  createdBy             User                    @relation("BrandCreator", fields: [createdById], references: [id])
}

enum PostType {
  TEXT
  IMAGE
  VIDEO
}

enum SocialMedia {
  INSTAGRAM
  YOUTUBE
  TUMBLR
  PINTEREST
  THREADS
  TIKTOK
  X
  FACEBOOK
  LINKEDIN
}
